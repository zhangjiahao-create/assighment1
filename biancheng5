问题：
    给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，
使得它们的和与 target 最接近。返回这三个数的和。假定每组输入只存在唯一答案。

例如：
    给定数组 nums = [-1，2，1，-4], 和 target = 1.与 target 最接近的三个数的和为
    2. (-1 + 2 + 1 = 2）
代码：
     int threeSumClosest(int* nums, int numsSize, int target)
     {
           int temp=1e5,sum=0;
           for(int i=0;i<numsSize-2;i++)
                for(int j= i+1;j<numsSize-1;j++)
                    for(int k = j+1;k<numsSize;k++)
                    {   
                         sum = nums[i]+nums[j]+nums[k];
                         if(abs(temp-target)>abs(sum-target))
                              temp = sum;   
                    }
           return temp;
     }
